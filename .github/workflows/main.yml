name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: 
  workflow_dispatch:
jobs:
  Python-deployment-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: terraform --version
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: run terraform scripts
        id: terraform_var
        run: |
             export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
             export AWS_SECRET_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
             #cd "$(Build.SourcesDirectory)"
           
             echo $GITHUB_WORKSPACE
             cd $GITHUB_WORKSPACE/terraform
             #cd /home/runner/work/django_sampleapp/django_sampleapp/terraform
             ls
             terraform init
             terraform plan 
             terraform apply -auto-approve > $GITHUB_WORKSPACE/output.txt
             cat  $GITHUB_WORKSPACE/output.txt
             #terraform destroy -auto-approve > $GITHUB_WORKSPACE/output.txt
             #v=$(grep -n "ec2_global_ips =" $GITHUB_WORKSPACE/output.txt | cut -d ":" -f1)
             #echo $v
             sed -n '$p' $GITHUB_WORKSPACE/output.txt > $GITHUB_WORKSPACE/ip.txt
             cat $GITHUB_WORKSPACE/ip.txt
             cat $GITHUB_WORKSPACE/ip.txt | cut -d "=" -f2 | sed 's/"//;s/.$//' > $GITHUB_WORKSPACE/ipadd.txt
             ip=$(sed -i 's/^ *//' $GITHUB_WORKSPACE/ipadd.txt | cat $GITHUB_WORKSPACE/ipadd.txt)
             echo $ip
             echo "ip_address=$ip" >> $GITHUB_OUTPUT
         
      - name: "check"
        run: echo ${{ steps.terraform_var.outputs.ip_address }}
        
      - name: ssh-scp-ssh-pipelines
        # You may pin to the exact commit or the version.
        # uses: cross-the-world/ssh-scp-ssh-pipelines@78e864b4890087a58248ff39320406971ca88b89
        uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
        with:
          # ssh remote host
          host: ${{ steps.terraform_var.outputs.ip_address }}
          # ssh remote port
          port: 22
          # ssh remote user
          user: ec2-user
          # content of ssh private key. ex raw content of ~/.ssh/id_rsa
          key: ${{ secrets.PRIVATE_KEY }}
          # ssh remote password
          #pass: # optional
          # connection timeout to remote host
          #connect_timeout: # optional, default is 30s
          # execute pre-commands before scp
          #first_ssh: # optional
          # scp from local to remote
          scp: $GITHUB_WORKSPACE/ => /home/ec2-user/
          # execute post-commands after scp
          last_ssh: |
                    python --version
                    pwd
                    ls
                    cd /home/ec2-user/django_sampleapp
                    pip install -r requirements.txt
                    python manage.py runserver 0.0.0.0:80
                    
             
